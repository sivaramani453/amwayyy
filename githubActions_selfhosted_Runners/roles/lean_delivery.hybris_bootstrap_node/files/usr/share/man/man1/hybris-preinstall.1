.\" Manpage for hybris-preinstall.

.TH man 8 "13 April 2017" "1.0" "hybris-preinstall man page"
.SH NAME
hybris-preinstall
.SH DESCRIPTION
.PP
\fBHybris-preinstall\fP - is a toolkit for quick deployment of Hybris platform.
.PP
Hybris-preinstall can be installed as a package. To do this you should:
.PP
1. Install using ansible https://github.com/lean-delivery/ansible-role-hybris-bootstrap-node

After hybris-preinstall is installed there will be following components available:
.sp
.I \fR 1. h-up utility: /opt/hybris-tools/h-up
.br
.I \fR 2. configuration file for hybris toolkit: /etc/default/h-tools
.br
.I \fR 3. service for hybris quick start/stop: /etc/systemd/system/hybrisd.service
.PP
.SH COMPONENTS DESCRIPTION
.sp 2i
.IP "1. Hybris toolkit \fBconfiguration file\fP description (/etc/default/h-tools):"
.sp 2i
Here are properties that can be changed during standart process. The other properties typically remain in the default state.
.sp
   \fBlegacy_structure\fP - defines what kind of git structure to use
.sp
   \fBenv_type\fP - Property for environment name: qa1, prod, perf to copy appropriate local.property located in config/environments/<env_type> folder (for new git structure) or config/environments/<env_type>.local.properties (for old git structure)
.sp
   \fBserver_type\fP - Property for server type: be, fe, batch to copy appropriate local.property, i.e. config/environments/<env_type>/<server_type>.local.properties (is used only with new git structure)
.sp
   \fBartifact_storage\fP - URL of artifact storage with hybris artifacts
.sp
   \fBtomcat_wrapper\fP - Property for tomcat wrapper to copy appropriate config file, i.e. config/tomcat/conf/wrapper-<tomcat_wrapper>.conf
.sp
   \fBinitialization_log_check\fP - defines if initialization log file should be parsed for searching strings matching <initialization_error_strings> regular expression
.sp 4i
.IP "2. \fBh-up utility\fP"
.sp
h-up is utility for hybris platform setup and managing in automated way.
.sp
It can perform following operations:
.sp
.I \fR * download hybris artifacts and unpack it to download_path
.br
.I \fR * hybris initialize
.br
.I \fR * hybris deploy
.br
.I \fR * hybris update system
.br
.I \fR * hybris update system lite
.br
.I \fR * hybris create/drop type system
.sp
It has following optional arguments:
.sp
.I \fR \fB-h, --help\fP   -   show help message and exit
.sp
.I \fR \fB--updateonly D_PATH\fP   -   Update only selected archive (artifact)
.sp
.I \fR \fB--initialize\fP   -   run hybris initialization
.sp
.I \fR \fB--updatesystem\fP   -   run hybris system update. Optional argument path to custom config file can be added, i.e. /path/to/my/config.json
.sp
.I \fR \fB--updatesystem-lite\fP   -   run hybris system update without ant build and ant server components. Mandatory argument path to custom config file must be added, i.e. /path/to/my/config.json
.sp
.I \fR \fB--deploy-release DEPLOY_VERSION\fP   -   deploy specific release from artifact storage. Artifactory URL ("artifact_storage" property from configuration file) + DEPLOY_VERSION - is full address to directory with required artifacts.
.sp
.I \fR \fB--drop-typesystem DROP_TYPESYSTEM\fP   -    drop specific type system
.sp
.I \fR \fB--create-typesystem CREATE_TYPESYSTEM\fP   -   create new type system and write it to local.properties
.sp
.I \fR \fB--server-type SERVER_TYPE\fP   -   Property for server type: be, fe, batch to copy appropriate local.property, i.e. config/environments/<env_type>/<server_type>.local.properties
.sp
.I \fR \fB--env-type ENV_TYPE\fP   -   Property for environment name: qa1, prod, perf to copy appropriate local.property located in config/environments/<env_type> folder
.sp
.I \fR \fB--purge-hybris-home\fP   -   clean Hybris home directory
.sp 4i
.IP "3. Service for hybris quick start/stop"
.sp
To see hybris status enter:
    \fBsystemctl status hybrisd\fP
.sp
To start hybris as a daemon enter:
    \fBsystemctl start hybrisd\fP
.sp
To stop hybris daemon enter:
    \fBsystemctl stop hybrisd\fP
