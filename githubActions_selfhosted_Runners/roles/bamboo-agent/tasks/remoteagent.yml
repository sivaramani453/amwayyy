---
- name: upgrade all packages
  yum: 
    name: "*"
    state: latest
  
- name: Set https_proxy
  set_fact:
    https_proxy: "{{ http_proxy }}"
  when:
    - https_proxy is undefined
    - http_proxy is defined

- name: "install openjdk-{{ openjdk_version }} (yum)"
  yum:
    name: "java-{{ openjdk_version }}-openjdk"
    state: installed
  when:
    - install_jdk|bool
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: "install openjdk-{{ openjdk_version }} (apt)"
  apt:
    name: "openjdk-{{ openjdk_version }}-jdk"
    state: installed
  when:
    - install_jdk|bool
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Add service user
  user:
    name: "{{ bamboo_agent_user }}"
    uid: "{{ bamboo_agent_uid }}"

- name: Create data folder for agent
  file:
    name: "{{ item }}"
    state: directory
    owner: "{{ bamboo_agent_user }}"
    group: "{{ bamboo_agent_user }}"
  with_items:
    - "{{ bamboo_agent_data_folder }}"
    - "{{ bamboo_agent_data_folder }}/conf"
    - "{{ bamboo_agent_data_folder }}/bin"
  register: data_folder

- name: Import SSL certificate from bamboo server to a given cacerts keystore
  java_cert:
    cert_url: "{{ bamboo_cert_url }}"
    cert_port: 443
    keystore_path: "{{ bamboo_java_home }}/jre/lib/security/cacerts"
    keystore_pass: changeit
    executable: "{{ bamboo_java_home }}/bin/keytool"
    state: present
  when: bamboo_cert_url is defined

- name: Set bamboo master URL for http
  set_fact:
    bamboo_master_url: "http://{{ bamboo_master_fqdn }}:{{ bamboo_master_port | default('8085') }}/"
  when: bamboo_master_https == False

- name: Set bamboo master URL for https
  set_fact:
    bamboo_master_url: "https://{{ bamboo_master_fqdn }}:{{ bamboo_master_port | default('443') }}/"
  when: bamboo_master_https|bool

- name: Download bamboo agent binary
  get_url:
    url: "{{ bamboo_master_url }}/agentServer/agentInstaller/atlassian-bamboo-agent-installer-{{ bamboo_master_version }}.jar"
    dest: "{{ bamboo_agent_application_folder }}"
    timeout: 300
    validate_certs: False
  when: data_folder.changed
  
- name: Install bamboo agent
  command: "java -Dbamboo.home={{ bamboo_agent_data_folder }} -jar {{ bamboo_agent_application_folder }}/atlassian-bamboo-agent-installer-{{ bamboo_master_version }}.jar {{ bamboo_master_url }}/agentServer/ install"
  become: True
  become_user: "{{ bamboo_agent_user }}"
  when: data_folder.changed

#- name: Remove bamboo agent installer
#  file:
#    path: "atlassian-bamboo-agent-installer-{{ bamboo_master_version }}.jar"
#    state: absent
- name: Set timezone for the agent
  timezone:
    name: "{{ bamboo_agent_timezone }}"

- name: Install bambooagent systemd unit script
  template:
    src: bamboo/bambooagent.service.j2
    dest: /etc/systemd/system/bambooagent.service
    mode: 0744
  notify: restart bambooagent

- name: Ensure service is enabled and started
  systemd:
    name: bambooagent
    enabled: True
    daemon_reload: True
    state: started

- name: Set xms memory limit for jvm
  lineinfile:
    path: "{{ bamboo_agent_data_folder }}/conf/wrapper.conf"
    state: present
    regexp: "^wrapper.java.initmemory="
    line: "wrapper.java.initmemory={{ bamboo_agent_jvm_xms }}"

- name: Set xmx memory limit for jvm
  lineinfile:
    path: "{{ bamboo_agent_data_folder }}/conf/wrapper.conf"
    state: present
    regexp: "^wrapper.java.maxmemory="
    line: "wrapper.java.maxmemory={{ bamboo_agent_jvm_xmx }}"

- name:  Set timeout for start attempts after server outage 
  lineinfile:
    path: "{{ bamboo_agent_data_folder }}/conf/wrapper.conf"
    state: present
    regexp: "^wrapper.max_failed_invocations="
    line: "wrapper.max_failed_invocations={{ bamboo_agent_start_timeout }}"

- name: Configure to not automatically add JDK capabilities
  lineinfile:
    path: "{{ bamboo_agent_data_folder }}/conf/wrapper.conf"
    line: wrapper.java.additional.3=-DDISABLE_AGENT_AUTO_CAPABILITY_DETECTION=true
  notify: restart bambooagent

- name: Add capabilities
  template:
    src: bamboo/bamboo-capabilities.properties.j2
    dest: "{{ bamboo_agent_data_folder }}/bin/bamboo-capabilities.properties"
