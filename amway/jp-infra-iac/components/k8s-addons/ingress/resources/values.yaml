controller:
  name: nginx-controller
  kind: DaemonSet
  service:
    externalTrafficPolicy: Local
    annotations:
      external-dns.alpha.kubernetes.io/hostname: ${domain_name}.
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      service.beta.kubernetes.io/aws-load-balancer-ip-address-type: "ipv4"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "ssl"
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-source-ranges: "10.0.0.0/8"
      service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
#  podAnnotations:
#    config.alpha.linkerd.io/trace-collector-service-account: ${trace_collector_service_account}
#    config.linkerd.io/trace-collector: ${trace_collector}
#    linkerd.io/inject: enabled
#  admissionWebhooks:
#    enabled: false
#  metrics:
#    enabled: true
#    serviceMonitor:
#      additionalLabels:
#        release: prometheus
#      enabled: true
  opentelemetry:
    enabled: true
  config:
    enable-opentelemetry: "true"
    opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
    opentelemetry-trust-incoming-span: "true"
    otlp-collector-host: ${otlp_collector_host}
    otlp-collector-port: ${otlp_collector_port}
    otel-max-queuesize: "2048"
    otel-schedule-delay-millis: "5000"
    otel-max-export-batch-size: "512"
    otel-service-name: "nginx-proxy"
    otel-sampler: "AlwaysOn"
    otel-sampler-ratio: "1.0"
    otel-sampler-parent-based: "false"
    log-format-escape-json: "true"
    log-format-upstream: '{"time": "$time_iso8601","remote_addr": "$proxy_protocol_addr","x_forwarded_for": "$proxy_add_x_forwarded_for","request_id": "$req_id","remote_user": "$remote_user","bytes_sent": "$bytes_sent","request_time": "$request_time","status": "$status","vhost": "$host","request_proto": "$server_protocol","path": "$uri","request_query": "$args","request_length": "$request_length","duration": "$request_time","method": "$request_method","http_referrer": "$http_referer","http_user_agent": "$http_user_agent","msec": "$msec","connection": "$connection","connection_requests": "$connection_requests","pid": "$pid","remote_port": "$remote_port","time_local": "$time_local","request": "$request","request_uri": "$request_uri","body_bytes_sent": "$body_bytes_sent","http_x_forwarded_for": "$http_x_forwarded_for","http_host": "$http_host","server_name": "$server_name","upstream": "$upstream_addr","upstream_connect_time": "$upstream_connect_time","upstream_header_time": "$upstream_header_time","upstream_response_time": "$upstream_response_time","upstream_response_length": "$upstream_response_length","upstream_cache_status": "$upstream_cache_status","ssl_protocol": "$ssl_protocol","ssl_cipher": "$ssl_cipher","scheme": "$scheme","pipe": "$pipe","gzip_ratio": "$gzip_ratio","http_cf_ray": "$http_cf_ray","geoip_country_code": "$geoip_country_code" }'
    opentelemetry-config: "/etc/nginx/opentelemetry.toml"






