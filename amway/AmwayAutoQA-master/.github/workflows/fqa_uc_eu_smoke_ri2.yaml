name: FQA EU Smoke RI2

on:
  workflow_dispatch:

# global env set
env:
  ECR_REGISTRY: "744058822102.dkr.ecr.eu-central-1.amazonaws.com"
  DOCKER_CONFIG: "/home/github/.docker"
  TEST: smoke
  BROWSER: chrome
  ENV: ultraserve_fqa
  REPORT_DIR: amway-test-system-ui-tests/target/site/allure-maven-plugin
  ARTIFACTS_DIR: b2c_ootb/target/allure-results
  REPORT_HISTORY_DIR: amway-test-system-ui-tests/target/site/allure-maven-plugin/history
  INCLUDE_TEST: "AllureReportsHistoryFilter"

  # reports related vars
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME}}
  REPORT_URL: "https://allure-reports.hybris.eu.eia.amway.net"

  # actions related vars
  ACTIONS_REPO: AmwayCommon/actions

  # notifiactions related vars
  SMTP_SERVER: relay.hybris.eu.eia.amway.net
  RCPTS: Amway.EU.AQA@Amway.com
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
jobs:
  countryrun:
    name: Run tests for ${{ matrix.country }} (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    strategy:
      fail-fast: false
      matrix:
        country: [spain, portugal, netherlands, belgium]
    env:
      COUNTRY: ${{ matrix.country }}

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"
          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER/$COUNTRY"
          S3_RUN_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"
          S3_HISTORY_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/history/$COUNTRY"
          HISTORY_DIR="./history"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV
          echo "S3_RUN_URL=$S3_RUN_URL" >> $GITHUB_ENV
          echo "HISTORY_DIR=$HISTORY_DIR" >> $GITHUB_ENV
          echo "S3_HISTORY_URL=$S3_HISTORY_URL" >> $GITHUB_ENV          

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Checkout ${{ env.ACTIONS_REPO }} repo
        uses: actions/checkout@v4
        with:
          path: actions
          token: ${{ secrets.GIT_TOKEN }}
          repository: ${{ env.ACTIONS_REPO }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Maven execution
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          # CUR_COUNTRY="${{ matrix.country }}"
          echo "maven call: mvn clean install -P$TEST -Denv=$ENV -Dcountry=$COUNTRY -Dbrowser=$BROWSER -Dcucumber.filter.tags=\"@smoke_eu and (@$COUNTRY or @ri2) and not @excluded\""
          mvn clean install -P$TEST -Denv=$ENV \
                          -Dcountry=$COUNTRY \
                          -Dbrowser=$BROWSER \
                          -Dcucumber.filter.tags="@smoke_eu and (@$COUNTRY or @ri2) and not @excluded"

      - name: Copy and filter previously saved history folder to allure results
        if: ${{ always() }}
        working-directory: ${{ env.CODEBASE }}
        shell: bash
        run: |
          mkdir -p $HISTORY_DIR
          aws s3 cp --recursive $S3_HISTORY_URL $HISTORY_DIR
          if [ -z "$(ls -A $HISTORY_DIR)"]; then
            echo "No history found for this workflow"
          else
            mvn -e clean install -Dbrowser="$BROWSER" \
                                 -DfailIfNoTests=false \
                                 -PdataGenerator \
                                 -Dcountry="$COUNTRY" \
                                 -Denv="$ENV" \
                                 -Dtest="$INCLUDE_TEST"
            cp -r "$HISTORY_DIR" "$ARTIFACTS_DIR/history"
          fi

      - name: Generate allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn -B allure:report

      - name: Try to upload history of allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          if [ -d "$REPORT_HISTORY_DIR" ]; then
            echo "Going to upload report history to s3"
            aws s3 cp --quiet --recursive $REPORT_HISTORY_DIR $S3_HISTORY_URL
            echo "HISTORY_UPLOADED=yes" >> $GITHUB_ENV
            echo "History uploaded"
          else
            echo "History folder of report is not found"
            REPORT_DIR_STRUCT=$(ls -lah $REPORT_DIR)
            echo "Report directory structure: $REPORT_DIR_STRUCT"
            echo "HISTORY_UPLOADED=no" >> $GITHUB_ENV
            exit 0
          fi

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          if [ -d $REPORT_DIR ]; then
              echo Going to upload report to s3
              aws s3 cp --quiet --recursive $REPORT_DIR $S3_FULL_URL
              echo "ARTIFACT_UPLOADED=yes" >> $GITHUB_ENV
              echo Report was uploaded
          else
              echo Reports dir NOT FOUND
              echo "ARTIFACT_UPLOADED=no" >> $GITHUB_ENV
              exit 0
          fi

      - name: Summary
        if: ${{ always() }}
        id: summary
        shell: bash
        run: |
          if [ $ARTIFACT_UPLOADED != 'yes' ]; then
              echo "Allure report was not uploaded"
              echo "Please check logs of previous steps"
          else
            echo "Allure report is ready --> $REPORT_URL/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER/$COUNTRY/"
            # store allure report urls
            #  echo "::set-output name=url::$REPORT_URL/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER/$COUNTRY/"
            mkdir -p LIST
            UPLOAD_DIR_CUR_PATH=$(pwd)
            echo "$REPORT_URL/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER/$COUNTRY/" > "LIST/$COUNTRY"
            echo "OUTPUT DATA of $COUNTRY :"
            cat LIST/"$COUNTRY"
            aws s3 cp --recursive $UPLOAD_DIR_CUR_PATH/LIST $S3_RUN_URL/LIST
            rm -f LIST/*
            rmdir LIST
          fi

      - name: Logout of Amazon ECR
        if: ${{ always() }}
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  summary:
    name: Show results of the all tests of enumerated countries of set tier (t3a.small)
    runs-on: [ self-hosted, t3a.small ]
    needs: countryrun
    if: ${{ always() }}

    steps:
      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Helper step
        shell: bash
        run: |
          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_RUN_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_RUN_URL=$S3_RUN_URL" >> $GITHUB_ENV
          
      - name: Print results of all enumerated countries
        shell: bash
        run: |
          echo "Download list from s3 $S3_RUN_URL"
          mkdir -p countries_list
          aws s3 cp --recursive $S3_RUN_URL/LIST countries_list
          ls -lah countries_list/
          COUNTRIES_LIST=$(find countries_list/ -maxdepth 1 -type f -printf '%f ')
          echo "COUNTRIES_LIST=$COUNTRIES_LIST" >> $GITHUB_ENV
          for F in $COUNTRIES_LIST
          do
            COUNTRY_FILE=$(cat "countries_list/$F")
            C_NAME="${F^}"
            echo "$C_NAME: $COUNTRY_FILE"
          done
          
      - name: Checkout ${{ env.ACTIONS_REPO }} repo
        uses: actions/checkout@v4
        with:
          path: actions
          token: ${{ secrets.GIT_TOKEN }}
          repository: ${{ env.ACTIONS_REPO }}

      - name: Prepare body for email
        id: prepare_report
        shell: bash
        run: |
          echo "Generate body of countries"
          MAIL_LIST="            <p><h1> ${{ github.workflow }} ${{ github.run_number}} COMPLETED</h1></p> <p>Allure Reports:</p><p></p>"
          for F in $COUNTRIES_LIST
          do
            # COUNTRY_NAME=$( echo "${F^}")
            COUNTRY_NAME="${F^}"
            COUNTRY_FILE=" <p><a href=\"$(cat countries_list/$F)\"/>$COUNTRY_NAME</a></p>"
            MAIL_LIST="$MAIL_LIST $COUNTRY_FILE"
          done
          echo "mail list: $MAIL_LIST"
          echo "MAIL_LIST=$MAIL_LIST" >> $GITHUB_ENV

      - name: Notify after completion (email media)
        if: ${{ always() }}
        uses: "./actions/send-email"
        with:
          smtp_server: ${{ env.SMTP_SERVER }}
          rcpts: ${{ env.RCPTS}}
          subj: "${{ github.workflow }} #${{ github.run_number}} COMPLETED"
          to: ${{ env.RCPTS }}
          msg: |
           Allure reports
           ${{ env.MAIL_LIST }}

      - name: Logout of Amazon ECR
        if: ${{ always() }}
        run: docker logout ${{ env.ECR_REGISTRY }}
