name: FQA KZ Regression Kazakhstan

on:
  workflow_dispatch:
    inputs:
      cycle:
        description: "Optional: Cycle key in JIRA (i.e. 'AMWRUS-C5740')"
        required: false
        
      email:
        description: "Optional: Recipient email(i.e. 'username@amway.com')"
        required: false
        
  schedule:
    - cron: 30 5 * * 1-5

env:
  ECR_REGISTRY: "744058822102.dkr.ecr.eu-central-1.amazonaws.com"
  DOCKER_CONFIG: "/home/github/.docker"
  # Tests related vars
  BROWSER: chrome
  COUNTRY: kazakhstan
  TEST_ENVIRONMENT: ultraserve_fqa_kz
  ARTIFACTS_DIR: b2c_ootb/target/allure-results
  REPORT_DIR: amway-test-system-ui-tests/target/site/allure-maven-plugin
  REPORT_HISTORY_DIR: amway-test-system-ui-tests/target/site/allure-maven-plugin/history

  # Reports related vars
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME}}
  REPORT_URL: "https://allure-reports.hybris.eu.eia.amway.net"
  CYCLE: ${{ github.event.inputs.cycle }}
  
  # actions related vars
  ACTIONS_REPO: AmwayCommon/actions
  
  # Notifications related vars
  SMTP_SERVER: relay.hybris.eu.eia.amway.net
  RCPTS: Amway.EU.AQA@Amway.com,PLUNEA7@amway.com
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
jobs:
  history:
    name: History cleaning
    runs-on: [ self-hosted, t3a.large ]
    timeout-minutes: 180
    if: ${{ always() }}

    env:
      INCLUDE_TEST: "AllureReportsHistoryFilter"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"
          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"
          HISTORY_DIR="./history"
          S3_HISTORY_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/history"
          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV
          echo "HISTORY_DIR=$HISTORY_DIR" >> $GITHUB_ENV
          echo "S3_HISTORY_URL=$S3_HISTORY_URL" >> $GITHUB_ENV
      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Checkout ${{ env.ACTIONS_REPO }} repo
        uses: actions/checkout@v4
        with:
          path: actions
          token: ${{ secrets.GIT_TOKEN }}
          repository: ${{ env.ACTIONS_REPO }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
      - name: Check and copy previously-saved history folder to project dir
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          mkdir $HISTORY_DIR
          aws s3 cp --recursive $S3_HISTORY_URL $HISTORY_DIR
          if [ -z "$(ls -A $HISTORY_DIR)"]; then
            echo there is NO history FOUND for this workflow
          else
            echo this workflow history is copied from $S3_HISTORY_URL
          fi
      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn -e clean install -Dbrowser=$BROWSER \
                               -DfailIfNoTests=$FAIL_IF_NO_TESTS \
                               -PdataGenerator \
                               -Dcountry=$COUNTRY \
                               -Denv=$TEST_ENVIRONMENT \
                               -Dtest=$INCLUDE_TEST
      - name: Try to upload filtered history back to s3
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          if [ -z "$(ls -A $HISTORY_DIR)"]; then
              echo History dir of report NOT FOUND
              echo "HISTORY_UPLOADED=no" >> $GITHUB_ENV
              exit 0
          else
              echo Going to upload filtered history to s3
              aws s3 cp --quiet --recursive $HISTORY_DIR $S3_HISTORY_URL
              echo "HISTORY_UPLOADED=yes" >> $GITHUB_ENV
              echo History was uploaded
          fi
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_01:
    name: Regression_010 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 01
      INCLUDE_TEST: "@Regression_Ru_010"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_02:
    name: Regression_011 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 02
      INCLUDE_TEST: "@Regression_Ru_011"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_03:
    name: Regression_012 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 03
      INCLUDE_TEST: "@Regression_Ru_012"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_04:
    name: Regression_02 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 04
      INCLUDE_TEST: "@Regression_Ru_02"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_05:
    name: Regression_03 or Regression_04 or Regression_11 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 05
      INCLUDE_TEST: "(@Regression_Ru_03 or @Regression_Ru_04 or @Regression_Ru_11)"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_06:
    name: Regression_06 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 06
      INCLUDE_TEST: "@Regression_Ru_06"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf

  job_07:
    name: Regression_07 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 07
      INCLUDE_TEST: "@Regression_Ru_01"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_08:
    name: Regression_08 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 08
      INCLUDE_TEST: "@Regression_Ru_05"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  job_09:
    name: Regression_013 (t3a.xlarge)
    runs-on: [ self-hosted, t3a.xlarge ]
    timeout-minutes: 180
    needs: [ history ]

    env:
      JOB_NUM: 09
      INCLUDE_TEST: "@Regression_Ru_013"
      EXCLUDE_TEST: "@excluded"

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Dbrowser=$BROWSER \
                            -Pregression \
                            -Dcountry=$COUNTRY \
                            -Denv=$TEST_ENVIRONMENT \
                            -DtestRunId=$TEST_RUN_ID \
                            -Dcycle=$CYCLE \
                            -Dcucumber.filter.tags="$INCLUDE_TEST and (@$COUNTRY or @ri5) and not $EXCLUDE_TEST"

      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          # Try to copy allure report
          if [ -d $ARTIFACTS_DIR ]; then
              mkdir -p allure
              for i in $ARTIFACTS_DIR/*; do cp -rf "$i" allure; done
          else
              echo Reports dir NOT FOUND
              exit 0
          fi

          # Upload allure report to s3
          tar -zcf allure_$JOB_NUM.tar.gz allure
          aws s3 cp  allure_$JOB_NUM.tar.gz  $S3_FULL_URL/allure_$JOB_NUM.tar.gz

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf


  summary:
    name: Generate results (t3a.large)
    runs-on: [ self-hosted, t3a.large ]
    timeout-minutes: 180
    needs: [ job_01, job_02, job_03, job_04, job_05, job_06, job_07, job_08, job_09 ]
    if: ${{ always() }}

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"

          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"
          ALLURE_RESULTS_HISTORY_DIR="b2c_ootb/target/allure-results/history"
          S3_HISTORY_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/history"

          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV
          echo "ALLURE_RESULTS_HISTORY_DIR=$ALLURE_RESULTS_HISTORY_DIR" >> $GITHUB_ENV
          echo "S3_HISTORY_URL=$S3_HISTORY_URL" >> $GITHUB_ENV

      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}
          
      - name: Checkout ${{ env.ACTIONS_REPO }} repo
        uses: actions/checkout@v4
        with:
          path: actions
          token: ${{ secrets.GIT_TOKEN }}
          repository: ${{ env.ACTIONS_REPO }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}


      - name: Download artifacts from the previous steps
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          mkdir -p $ARTIFACTS_DIR
          cd $ARTIFACTS_DIR

          # Copy results for s3 to appropriate dir
          aws s3 cp --quiet --recursive  $S3_FULL_URL .
          for file in *.tar.gz; do
              tar -zxf $file
          done

          for x in allure/*; do mv -- "$x" .; done
          rmdir allure

      - name: Check and copy previously-saved history folder to allure-results
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          cd $ARTIFACTS_DIR
          mkdir history
          aws s3 cp --recursive $S3_HISTORY_URL ./history
          if [ -z "$(ls -A ./history)" ]; then
            echo there is NO history FOUND for this workflow
          else
            echo this workflow history is copied
            ls -lastr ./history/
          fi

      - name: Generate allure report
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn allure:report

      - name: Upload prepared allure report to s3
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          aws s3 cp --recursive $REPORT_DIR $S3_FULL_URL

      - name: Try to upload history of allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          if [ -d $REPORT_HISTORY_DIR ]; then
              ls -A $REPORT_HISTORY_DIR
              echo Going to upload report history to s3
              aws s3 cp --quiet --recursive $REPORT_HISTORY_DIR $S3_HISTORY_URL
              echo "HISTORY_UPLOADED=yes" >> $GITHUB_ENV
              echo History was uploaded
          else
              echo History dir of report NOT FOUND
              tmpVar=$(ls $REPORT_DIR)
              echo "Showing Report directory structure: $tmpVar"
              echo "HISTORY_UPLOADED=no" >> $GITHUB_ENV
              exit 0
          fi

      - name: Print results of scheduled tests
        shell: bash
        run: |
          echo
          echo "ALlure report could be found here: $REPORT_URL/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"
          

      - name: Extract stats for email
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          if [ -d $REPORT_DIR ]; then
              TEST_STATS=$( jq '.statistic' $REPORT_DIR/widgets/summary.json )
              echo Extracted test stats
              echo "${TEST_STATS}"
              PASSED=$( jq '.statistic.passed' $REPORT_DIR/widgets/summary.json )
              echo "PASSED=$PASSED" >> $GITHUB_ENV
              FAILED=$( jq '.statistic.failed' $REPORT_DIR/widgets/summary.json )
              echo "FAILED=$FAILED" >> $GITHUB_ENV
              BROKEN=$( jq '.statistic.broken' $REPORT_DIR/widgets/summary.json )
              echo "BROKEN=$BROKEN" >> $GITHUB_ENV
              SKIPPED=$( jq '.statistic.skipped' $REPORT_DIR/widgets/summary.json )
              echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
              TOTAL=$( jq '.statistic.total' $REPORT_DIR/widgets/summary.json )
              echo "TOTAL=$TOTAL" >> $GITHUB_ENV
              PASSRATE=$(awk -v p=$PASSED -v t=$TOTAL 'BEGIN {r=p/t*100; printf "%.2f", r}')
              echo "PASSRATE=$PASSRATE" >> $GITHUB_ENV
          else
              exit 0
          fi


      - name: Notify after completion (email media)
        if: ${{ always() }}
        uses: "./actions/send-email"
        with:
          smtp_server: ${{ env.SMTP_SERVER }}
          rcpts: ${{ env.RCPTS}}
          subj: "Build job of ${{ github.workflow }} #${{ github.run_number}} completed successfully!"
          to: Amway.EU.AQA@Amway.com
          msg: |
            <p>Allure Report could be found <a href='${{ env.REPORT_URL }}/${{ env.WORKFLOW_NAME}}/N${{ github.run_number }}'>here</a> </p>
            <h1>Passrate: ${{ env.PASSRATE }} %</h1>
            <p>Passed: ${{ env.PASSED }}</p>
            <p>Failed: ${{ env.FAILED }}</p>
            <p>Broken: ${{ env.BROKEN }}</p>
            <p>Skipped: ${{ env.SKIPPED }}</p>
            <p>Total: ${{ env.TOTAL }}</p>


      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf
