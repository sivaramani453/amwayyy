name: PROD UA Monitoring Ukraine

on:
  workflow_dispatch:
  schedule:
    - cron: 0 3 * * *
    - cron: 0 9 * * *

env:
  ECR_REGISTRY: "744058822102.dkr.ecr.eu-central-1.amazonaws.com"
  DOCKER_CONFIG: "/home/github/.docker"
  # Static vars
  BROWSER: chrome
  COUNTRY: ukraine
  TEST_ENVIRONMENT: ultraserve_prod_ua
  REPORT_DIR: amway-test-system-ui-tests/target/site/allure-maven-plugin

  # Reports related vars
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME}}
  REPORT_URL: "https://allure-reports.hybris.eu.eia.amway.net"

  # actions related vars
  ACTIONS_REPO: AmwayCommon/actions

  # Notifications related vars
  SMTP_SERVER: relay.hybris.eu.eia.amway.net

  RCPTS:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
jobs:
  job_01:
    name: Run prod ua tests (t3a.large)
    runs-on: [ self-hosted, t3a.large ]

    steps:
      - name: Helper step
        shell: bash
        run: |
          ip_addr=$(ip --brief a | tail -n1 | awk '{print $3}')
          echo "Agent IP address is: ${ip_addr%/*}"
          CODEBASE="${GITHUB_REPOSITORY##*/}"
          WORKFLOW_NAME=$(echo ${GITHUB_WORKFLOW,,} | sed -e 's:\s:_:g')
          S3_FULL_URL="s3://$S3_BUCKET_NAME/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"
          # Set usefull env vars for next steps
          echo "CODEBASE=$CODEBASE" >> $GITHUB_ENV
          echo "WORKFLOW_NAME=$WORKFLOW_NAME" >> $GITHUB_ENV
          echo "S3_FULL_URL=$S3_FULL_URL" >> $GITHUB_ENV


      # - name: Debug - disable postfix
      #   shell: bash
      #   run: sudo service postfix stop
        
        # - name: Checkout AmwayAutoQA repo
        #   shell: bash
        #   run:
        #     pwd
        #     ls -la
      - name: Checkout AmwayAutoQA repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.CODEBASE }}
        
          
      - name: Checkout ${{ env.ACTIONS_REPO }} repo
        uses: actions/checkout@v4
        with:
          path: actions
          token: ${{ secrets.GIT_TOKEN }}
          repository: ${{ env.ACTIONS_REPO }}

      - name: Login into the AWS ECR registry
        shell: bash
        run: |
          aws ecr get-login-password --region  eu-central-1   | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
      - name: Maven execute
        shell: bash
        env:
          DISPLAY: ":1.0"
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn clean install -Pprod_ru -Dbrowser=chrome -Dcountry=ukraine -Denv=ultraserve_prod_ua -Dcucumber.filter.tags="@ProdMonitoringUa"
      - name: Generate allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          mvn -B allure:report
      - name: Try to upload allure report
        if: ${{ always() }}
        shell: bash
        working-directory: ${{ env.CODEBASE }}
        run: |
          if [ -d $REPORT_DIR ]; then
              echo Going to upload report to s3
              aws s3 cp --quiet --recursive $REPORT_DIR $S3_FULL_URL
              echo "ARTIFACT_UPLOADED=yes" >> $GITHUB_ENV
              echo Report was uploaded
          else
              echo Reports dir NOT FOUND
              echo "ARTIFACT_UPLOADED=no" >> $GITHUB_ENV
              exit 0
          fi
      - name: Summary
        if: ${{ always() }}
        shell: bash
        run: |
          if [ $ARTIFACT_UPLOADED != 'yes' ]; then
              echo "Allure report was not uploaded"
              echo "Please check logs of previous steps"
          else
            echo "Allure report is ready --> $REPORT_URL/$WORKFLOW_NAME/N$GITHUB_RUN_NUMBER"
          fi

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ env.ECR_REGISTRY }}

      - name: Clean up
        shell: bash
        if: ${{ always() }}
        run: |
          ls -A | xargs -n 1 rm -rf
