---
- name: Start hybris
  block:
    - name: Start hybrisd service
      systemd:
        name: hybrisd
        enabled: yes
        state: started

    - name: Restart filebeat-pipeline service
      systemd:
        name: filebeat-pipeline
        enabled: yes
        state: restarted
      when: restart_filebeat

    - name: Check if tomcat-notification-1.0-SNAPSHOT.jar exists
      stat:
        path: "{{ tomcat_notification_jar_path }}"
      register: stat_result

    - name: Ensure hybris is started on eu envs
      wait_for:
        path: "{{ success_trigger_path }}"
        state: present
        timeout: "{{ timeout_duration_sec }}"
      when: stat_result.stat.exists

    - name: Ensure hybris is started on ru envs
      wait_for:
        path: /opt/hybris/log/tomcat/console.log
        search_regex: 'Server startup in \d{1,} ms'
        timeout: "{{ timeout_duration_sec }}"
      when: not stat_result.stat.exists

    - name: "Ensure we getting 200 status codes on https://{{ inventory_hostname }}:{{ hybris_hmc_port }}{{ hybris_hmc_path }}"
      delegate_to: localhost
      uri:
        follow_redirects: all
        status_code: 200
        timeout: 30
        url: "https://{{ inventory_hostname }}:{{ hybris_hmc_port }}{{ hybris_hmc_path }}"
        validate_certs: no
  rescue:
    - name: Notify about failure
      include_role: 
        name: "../roles/notification-with-tags" 
      vars:
        notification_message: "{{ hybris_deploy_version }} deploy on {{ environment_name }} failed. could not {{ ansible_failed_task.name }}."

    - name: Now fail real when
      fail:
        msg: "Could not {{ ansible_failed_task.name }}"
