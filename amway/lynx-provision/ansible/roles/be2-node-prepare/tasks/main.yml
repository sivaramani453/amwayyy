---
- name: "Mount media"
  mount:
    path: "/opt/media"
    src: "/dev/nvme1n1"
    fstype: "xfs"
    state: "mounted"

# - name: "Ensure that media is owned by hybris user"
#   file:
#     path: "/opt/media"
#     owner: "{{ htools_username }}"
#     group: "{{ htools_groupname }}"
#     state: "directory"
#     recurse: True

- name: "Mount database"
  mount:
    path: "/var/lib/mysql"
    src: "/dev/nvme2n1p1"
    fstype: "xfs"
    state: "mounted"

# - name: "Ensure that mysql folder is owned by mysql user"
#   file:
#     path: "/var/lib/mysql"
#     owner: "mysql"
#     group: "mysql"
#     state: "directory"
#     recurse: True

- name: "h-up: Set env_type"
  lineinfile:
    path: "/etc/default/h-tools"
    regexp: '^env_type =*'
    line: "env_type = \"{{ env_name }}_be2\""

- name: "h-up: Set server_type"
  lineinfile:
    path: "/etc/default/h-tools"
    regexp: '^server_type =*'
    line: "server_type = \"{{ env_name }}_be2\""

- name: "Populate exports file"
  blockinfile:
    path: "/etc/exports"
    block: |
      /opt/media {{ groups.be1.0 }}(rw,sync) {{ groups.fe1.0 }}(rw,sync) {{ groups.fe2.0 }}(rw,sync)
      /opt/hotfolder {{ groups.be1.0 }}(rw,sync)
    insertafter: "EOF"
    create: True
    owner: "root"
    group: "root"
    mode: "0644"
    state: "present"

- name: "Start and enable services"
  service:
    name: "{{ service }}"
    state: "started"
    enabled: True
  loop:
    - mysqld
    - nfs-server
  loop_control:
    loop_var: "service"

- name: "Filebeat: replace beat name"
  replace:
    path: "/etc/filebeat/filebeat-out.yml"
    regexp: "^name:*"
    replace: "#name:"

- name: "Filebeat: insert beat name"
  lineinfile:
    path: "/etc/filebeat/filebeat-out.yml"
    regexp: "^name:*"
    insertafter: "^#name:*"
    line: "name: \"{{ groups.be2.0 }}\""

- name: "Filebeat: restart service"
  service:
    name: "filebeat-pipeline"
    state: "restarted"

- name: "Stream customizations: artifact storage ru URL"
  replace:
    path: "/etc/default/h-tools"
    regexp: "{{ htools_artifact_storage }}"
    replace: "{{ artifact_storage_ru }}"
  when: env_customization == "ru"
