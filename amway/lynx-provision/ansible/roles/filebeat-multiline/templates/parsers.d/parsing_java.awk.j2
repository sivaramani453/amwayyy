# This block is present only for debugging and testing puposes
# Do not leave it uncommented while running in pipeline!
#=============================================================
#  BEGIN{sourcelog="testlog.log"
# logtype[sourcelog]="java"
# index_name[sourcelog]="java"
# }
#  {
#      parsing_java(sourcelog)
#  }
#  END{}
#=============================================================

function parsing_java(sourcelog)
{
clear_special_symbols()					# clear message from special characters to avoid JSON failures

parsing_result = match($0,/([0-9]{4}-[0-9]{2}-[0-9]{2}\s[0-9:,]+)\s+\[([^\[^\]]+\S)\s*\]\s+(WARN|INFO|ERROR|SEVERE|DEBUG|TRACE)\s+(.+)/,msg)
if (parsing_result == 0) 
   parsing_result = match($0,/([0-9]{4}-[0-9]{2}-[0-9]{2}\s[0-9:,]+)\s+(WARN|INFO|ERROR|SEVERE|DEBUG|TRACE)\s+\[([^\[^\]]+\S)\s*\]\s+(.+)/,msg)
if (parsing_result > 0) 
{
	tst = convert_time(msg[1])
        if (tst != -1)
        {
		if (sourcelog in message)
      out_multiline(sourcelog)
		timestamp[sourcelog] = tst
		source[sourcelog] = msg[2]
		severity[sourcelog] = msg[3]
		message[sourcelog] = msg[4]
		next
	}
}

if (sourcelog in message) 
        message[sourcelog] = message[sourcelog] "\\n" $0
}

function java_fields(sourcelog) # json multiline output
{
# list of keys and values of fields for JSON output
  java_field["@timestamp"] = timestamp[sourcelog]
  java_field["loglevel"] = severity[sourcelog]
  java_field["source"] = source[sourcelog]
  java_field["sourcelog"] = sourcelog
  java_field["logtype"] = logtype[sourcelog]
  java_field["message"] = message[sourcelog]
  java_field["index"] = index_name[sourcelog]
  print out_json(java_field)
}

function java_clean(sourcelog)
{
    for (i in java_field)
        delete java_field[i]
    delete timestamp[sourcelog]
    delete severity[sourcelog]
    delete source[sourcelog]
    delete message[sourcelog]
    delete index_name[sourcelog]
    delete logtype[sourcelog]
}

@include "{{ path.config }}/awk.d/out_multiline.awk"
@include "{{ path.config }}/awk.d/convert_time.awk"
@include "{{ path.config }}/awk.d/clear_special_symbols.awk"
@include "{{ path.config }}/awk.d/out_json.awk"