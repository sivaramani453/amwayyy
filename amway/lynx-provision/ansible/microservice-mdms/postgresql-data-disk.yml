---
- name: Provision additional disk for PostgreSQL data
  block:
   - name: Create mount path for data directory
     file:
      path: "{{ pgsql_data_mount_path }}"
      state: directory
      owner: "998"
      group: "root"
      mode: "0700"

   - name: Set root device name
     set_fact:
      root_device_name: "{{ ansible_mounts | json_query('[?mount == `/` ] | [0].device') }}"

   - name: Read data device information
     parted:
      device: "/dev/{{ item }}"
      unit: "MiB"
     with_items: "{{ ansible_devices }}"
     when: item not in root_device_name
     register: data_device_info

   - name: Set data device name
     set_fact:
      data_device_name: "{{ data_device_info.results[0].disk.dev  }}"

   - name: "Create partion on {{ data_device_name  }}"
     parted:
      device: "{{ data_device_name }}"
      number: 1
      label: "gpt"
      part_start: "0%"
      part_end: "100%"
      name: "pgdata"
      state: "present"

   - name: "Create filesystem on {{ data_device_name }}p1"
     filesystem:
      fstype: "{{ pgsql_data_filesystem_type | default('xfs') }}"
      dev: "{{ data_device_name }}p1"

   - name: "Rediscover facts for {{ data_device_name }}"
     setup: {}

   - name: "Mount {{ pgsql_data_mount_path }} on {{ data_device_name }}p1 by UUID"
     mount:
      name: "{{ pgsql_data_mount_path }}"
      src: "UUID={{ ansible_devices[data_device_name.split('/')[2]].partitions[data_device_name.split('/')[2] + 'p1'].links.uuids[0] }}"
      fstype: "{{ pgsql_data_filesystem_type | default('xfs') }}"
      opts: "{{ pgsql_data_mount_opts }}"
      state: "mounted"

  any_errors_fatal: True
  become: True
  tags:
   - postgresql-data
