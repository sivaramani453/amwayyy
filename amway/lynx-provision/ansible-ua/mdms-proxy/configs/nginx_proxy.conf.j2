server {
  listen                      0.0.0.0:{{ proxy_listen_port }};
  server_name {{ server_name }};

  access_log                  off;

  #Time limits
  proxy_connect_timeout       10;
  proxy_send_timeout          10;
  proxy_read_timeout          10;
  send_timeout                10;

  #Kind of cache that shall be used. May be configured also nn location directive
  proxy_cache stale_cache;

  proxy_ignore_headers "Set-Cookie";
  proxy_hide_header "Set-Cookie";

  location / {
    # Header assigned:
    #   HIT - from cache
    #   MISS - from server
    #   EXPIRED - cache has expired, server has been requested
    #   STALE - server has not responded, so served from cache
    add_header X-Cache-Status $upstream_cache_status;

    add_header X-Upstream-Status $upstream_status;
    #@TODO somehow we need to pass header with time of last server response for a given object
    # add_header X-Time ...;

    # We may ignore headers if we need to
    # proxy_ignore_headers Expires Cache-Control Set-Cookie;

    # By default data shipped via POST method 
    # proxy_cache_methods GET HEAD POST;

    # @see https://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_cache_key
    # may be configured on the session level with $cookie_jsessionid
    proxy_cache_key $scheme$proxy_host$uri$is_args$args;

    proxy_cache_valid 200 1s;
    proxy_connect_timeout 6s;

    # In case you'd like to minimize request rate to proxy servers, set proxy_cache_lock
    # @see https://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_cache_lock

    # In case backend is dead (ie returns configured code), treat it as stalled
    # updating - better avoid, proxy returns cached response with UPDATING status
    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    # optional background update
    # proxy_cache_background_update on;

    # Exclude from caching if needed @see https://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass
    # proxy_cache_bypass ...

    # Where the backend lies...
    proxy_pass {{ upstream }};
  }
}
