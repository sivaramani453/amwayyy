---
- name: Setup EFS for pg_partman archives
  block:
   - name: Install nfs-utils
     package:
      name:
        - nfs-utils
      state: present
 
   - name: Create directory for EFS mountpoint
     file:
      path: "{{ archive_efs_mountpoint_dest }}"
      state: directory
      owner: "{{ archive_user }}"
      group: "{{ archive_group }}"
      mode: "0755"
 
   - name: Mount EFS
     mount:
      name: "{{ archive_efs_mountpoint_dest }}"
      src: "{{ archive_efs_mountpoint_src }}:/"
      fstype: nfs4
      opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev
      state: mounted
          
   - name: Give rwx permissions on EFS mountpoint 
     file:
      path: "{{ archive_efs_mountpoint_dest }}"
      owner: root
      group: root
      mode: "0777"
  become: True 
  tags:
    - efs-config

- name: PostgreSQL repository
  block:
    - name: Install PostgreSQL repository
      yum:
        name: "{{ pg_repo_url }}"
        state: present

    - name: Install PostgreSQL packages
      yum:
        name: "{{ item }}"
        state: present
      loop: "{{ pg_packages }}"  
  become: True
  tags:
     - pg_repo
     - crontab   

- name: Install additional packages for pg_partman
  block:
    - name: Install python3 
      package:
       name: 
         - "python3"
       state: present    

    - name: Install pip3 packages
      pip:
        name: "{{ item }}"
        executable: pip3
      loop: "{{ pip3_packages }}"  

  become: True
  tags:
    - crontab
      
- name: Setup crontab entry for archive script
  block:
   - name: "Copy dump_partition.py to {{ archive_user_home }}"
     copy:
       src: "dump_partition.py"
       dest: "{{ archive_user_home }}/dump_partition.py" 
   
   - name: "Copy run_dump_partition.sh to {{ archive_user_home }} "
     template:
       src: run_dump_partition.sh.j2
       dest: "{{ archive_user_home }}/run_dump_partition.sh"
       mode: "0755"

   - name: "Create crontab for {{ archive_user }} to run dump_partition.py"
     cron:
       name: "Run archive script for pg_partman"
       special_time: "{{ archive_cron_special_time }}"
       job: "{{ archive_cron_job }}"
  become: "{{ archive_user }}" 
  tags:
    - crontab  
