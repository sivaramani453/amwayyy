---
- name: Install WM and VNC
  block:
    - name: Install Xserver
      yum:
        name: "@X Window System"
        state: "present"

    - name: Install Openbox WM
      yum:
        name: openbox
        state: "present"    

    - name: Install TigerVNC
      yum:
        name: "{{ item }}"
        state: "present"
      loop:
        - tigervnc-server
        - tigervnc-server-minimal
  become: True
  tags:
     - xserver-vm 

- name: Prepare VNC configuration
  block:
    - name: "Create .vnc directory in {{ vnc_user }} home directory'"
      file:
        path: "/home/{{ vnc_user }}/.vnc"
        state: "directory"
        owner: "{{ vnc_user }}"
        group: "{{ vnc_group }}"
        mode: 0755

    - name: Render default VNC config
      template:
        src: "config.j2"
        dest: "/home/{{ vnc_user }}/.vnc/config"
        owner: "{{ vnc_user }}"
        group: "{{ vnc_group }}"
        mode: 0644
    
    - name: Render VNC startup file
      template:
        src: "xstartup.j2"
        dest: "/home/{{ vnc_user }}/.vnc/xstartup"
        owner: "{{ vnc_user }}"
        group: "{{ vnc_group }}"
        mode: 0755

    - name: "Copy Xresources to {{ vnc_user }} home directory"
      copy:
        src: "/etc/X11/Xresources"
        dest: "/home/{{ vnc_user }}/.Xresources"
        owner: "{{ vnc_user }}"
        group: "{{ vnc_group }}"
        mode: 0644
        remote_src: True

    - name: Create VNC password
      shell: |
        set -o pipefail
        echo {{ vnc_password }} | vncpasswd -f > /home/{{ vnc_user }}/.vnc/passwd
      args:
        chdir: "/home/{{ vnc_user }}/.vnc"
        creates: "/home/{{ vnc_user }}/.vnc/passwd"
        executable: /bin/bash  

    - name: Set permissions for VNC passwd file
      file:
        path: "/home/{{ vnc_user }}/.vnc/passwd"
        owner: "{{ vnc_user }}"
        group: "{{ vnc_group }}"
        mode: 0700
        
  become: True
  become_user: "{{ vnc_user }}"
  tags:
    - vnc-config

- name: Install VNC systemd service
  block:
    - name: Render VNC service config
      template:
        src: "vncserver@.service.j2"
        dest: "/etc/systemd/system/vncserver@.service"
        owner: root
        group: root
        mode: 0644
      notify: "Reload daemons via systemctl"

    - name: Disable firewalld service
      systemd:
        name: firewalld
        enabled: False
        state: stopped
    
  become: True
  tags:
    - vnc-service

- name: VNC workaround service      
  block:
    - name: "Find pid file of VNC service"
      find:
        paths: /home/{{ vnc_user }}/.vnc
        patterns: "*.pid"
      register: files_to_delete
 
    - name: Delete PID file
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ files_to_delete.files }}"
  
    - name: Ensures /opt/scripts dir exists
      file: 
        path: /opt/scripts
        state: directory
 
    - name: Copy workaround script to /opt/scripts
      template:
        src: vnc.sh.j2
        dest: /opt/scripts/vnc.sh
        mode: 0755
        owner: root
 
    - name: Copy workaround systemd.service file
      template:
        src: vnc-workaround.service.j2
        dest: /etc/systemd/system/vnc-workaround.service
        mode: 0644
        owner: root
      notify: "Reload workaround service"

  become: True
  tags:
    - vnc-workaround  
