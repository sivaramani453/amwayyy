---
- name: "Install epel"
  become: True
  package:
    name: "epel-release"
    state: "present"

- name: "Install Xfce"
  become: True
  yum:
    name: "@Xfce"
    state: "present"

- name: "Install TigerVNC"
  become: True
  yum:
    name: "{{ item }}"
    state: "present"
  loop:
    - tigervnc-server
    - tigervnc-server-minimal

- name: "Create directory"
  become: True
  file:
    path: "/home/{{ vnc_user }}/.vnc"
    state: "directory"
    owner: "{{ vnc_user }}"
    group: "{{ vnc_group }}"
    mode: '0755'

- name: "Render default VNC config"
  become: True
  template:
    src: "config.j2"
    dest: "/home/{{ vnc_user }}/.vnc/config"
    owner: "{{ vnc_user }}"
    group: "{{ vnc_group }}"
    mode: "0644"
    
- name: "Render VNC startup file"
  become: True
  template:
    src: "xstartup.j2"
    dest: "/home/{{ vnc_user }}/.vnc/xstartup"
    owner: "{{ vnc_user }}"
    group: "{{ vnc_group }}"
    mode: "0755"

- name: "Copy Xresources to {{ vnc_user }} home directory"
  become: True
  copy:
    src: "/etc/X11/Xresources"
    dest: "/home/{{ vnc_user }}/.Xresources"
    owner: "{{ vnc_user }}"
    group: "{{ vnc_group }}"
    mode: "0644"
    remote_src: True

- name: "Create VNC password"
  become: True
  shell: echo {{ vnc_password }} | vncpasswd -f > /home/{{ vnc_user }}/.vnc/passwd
  register: enc_pass

# file module fails here with file absent error, dunno why
- name: "Set correct permissions for VNC passwd file"
  become: True
  shell: "chown {{ vnc_user }}:{{ vnc_group }} /home/{{ vnc_user }}/.vnc/passwd | chmod 0600 /home/{{ vnc_user }}/.vnc/passwd"

- name: "Render VNC service config"
  become: True
  template:
    src: "vncserver@.service.j2"
    dest: "/etc/systemd/system/vncserver@.service"
    owner: root
    group: root
    mode: "0644"
  notify: "Reload VNC service"

- name: "Find pid file of VNC service"
  become: True
  find:
    paths: /home/{{ vnc_user }}/.vnc
    patterns: "*.pid"
  register: files_to_delete

- name: "Delete PID file"
  become: True
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"

- name: Ensures /opt/scripts dir exists
  become: True
  file: 
    path: /opt/scripts
    state: directory

- name: Copy workaround script to /opt/scripts
  become: True
  template:
    src: vnc.sh.j2
    dest: /opt/scripts/vnc.sh
    mode: 0755
    owner: root

- name: Copy workaround systemd.service file
  become: True
  template:
    src: vnc-workaround.service.j2
    dest: /etc/systemd/system/vnc-workaround.service
    mode: 0644
    owner: root
  notify: "Reload workaround service"
