---
- name: "Install requirements"
  package: 
    name: "{{ package }}"
    state: "present"
  loop: "{{ solr_requirements }}"
  loop_control:
    loop_var: "package"
  become: True

- name: "Download solr {{ solr_version }} artifact"
  become: True
  get_url:
    url: "{{ solr_distr_url }}"
    dest: "{{ download_path }}"
  register: SOLR_ARCHIVE_DOWNLOADED
  until: "'OK' in SOLR_ARCHIVE_DOWNLOADED.msg"
  retries: 3
  delay: 2

- name: "Downloaded solr artifact"
  set_fact:
    solr_artifact: "{{ SOLR_ARCHIVE_DOWNLOADED.dest }}"

- name: "unarchive solr {{ solr_version }}"
  become: True
  unarchive:
    src: "{{ solr_artifact }}"
    dest: "{{ download_path }}"
    remote_src: True
  
- name: "Install solr as a service"
  become: True
  command: "/bin/bash {{ download_path }}/solr-{{ solr_version }}/bin/install_solr_service.sh {{ solr_artifact }} -d {{ solr_base_path }} -i {{ solr_dest_main_path }}"

- name: "Stop Solr service"
  become: True
  command: "service solr stop"

- name: "Create data dir for solr cloud"
  file:
    path: "{{ solr_dest_solr_path }}/data"
    state: "directory"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    mode: "0755"
  become: True

- name: "Copy solr.xml to data dir"
  copy:
    remote_src: True
    src: "{{ solr_dest_solr_path }}/server/solr/solr.xml"
    dest: "{{ solr_dest_solr_path }}/data/solr.xml"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    mode: "0644"        
  become: True

- name: "add selinux support"
  include_tasks: selinux-support.yml
  when: ( ansible_selinux.status == "enabled" )

- name: "add hybris integrations"
  include_tasks: hybris.yml
  when: ( solr_intergrations is defined ) and ( solr_intergrations == "hybris" )

- name: "Adjust solr configuration"
  become: True
  template:
    src: solr.in.sh.j2
    dest: "{{ solr_insh_default }}"
    owner: "{{ solr_user }}"
    group: "{{solr_group }}"
    mode: "0755"
  notify: restart solr
