---
- name: Install and Configure Zookeeper Cluster
  hosts: zookeeper

  pre_tasks:
    - name: Install boto packages to work with s3
      include_tasks: boto.yml

  roles:
    - role: './roles/lean_delivery.java'
    - role: './roles/lean_delivery.zookeeper'
  become: true

- name: Install and Configure Solr Cluster
  hosts: solr

  pre_tasks:
    - name: Install boto packages to work with s3
      include_tasks: boto.yml

  roles:
    - role: './roles/lean_delivery.java'
    - role: './roles/lean_delivery.solr_standalone'
    - role: './roles/lean_delivery.solr_cloud'
  become: true

  post_tasks:
    - name: Install Maven Libraries
      block:
       - name: Create directory for libraries
         file:
          path: '{{ solr_maven_libs_dest }}'
          state: directory
          owner: '{{ solr_user }}'
          group: '{{ solr_group }}'
          mode: '0755'

       - name: Install lxml library from python pip
         pip:
          name: lxml

       - name: Install Solr Maven libraries
         maven_artifact:
           group_id: '{{ solr_maven_group_id }}'
           artifact_id: '{{ item }}'
           version: '{{ solr_maven_libs_version }}'
           owner: '{{ solr_user }}'
           group: '{{ solr_group }}'
           mode: 0644
           repository_url: '{{ solr_maven_repository_url }}'
           dest: '{{ solr_maven_libs_dest }}/{{ item }}-{{ solr_maven_libs_version }}.jar'
         loop: '{{ solr_maven_libs_list }}'
         register: maven_libs_downloaded
         until: maven_libs_downloaded is succeeded
         retries: 3
         delay: 2


       - name: Download Solr Plugin for Address Validtion Adapter
         aws_s3:
           bucket: '{{ transport_s3_bucket }}'
           object: '{{ solr_plugin_lib_src_s3 }}'
           dest: '{{ solr_plugin_lib_dest }}/{{ solr_plugin_lib_src_s3 | basename }}'
           aws_access_key: '{{ transport_s3_aws_access_key }}'
           aws_secret_key: '{{ transport_s3_aws_secret_key }}'
           mode: get
           overwrite: different
           ignore_nonexistent_bucket: true
         retries: 3
         delay: 2
         become: true
         become_user: '{{ solr_user }}'

       - name: Added Limit NOFILE and NPROC to solr systemd service file
         lineinfile:
           path: '{{ solr_systemd_service_path }}'
           state: present
           insertbefore: '^PIDFile='
           line: '{{ item }}'
         loop: '{{ solr_systemd_service_line }}'
      
       - name: Reload daemons via systemctl
         systemd:
           daemon-reload: yes
           name: solr.service
           enabled: yes
           state: restarted   
         
      become: true

    - name: Setup EFS for Solr backups
      block:
       - name: Install nfs-utils
         package:
          name:
            - nfs-utils
          state: present

       - name: Create directory for EFS mountpoint
         file:
          path: '{{ solr_efs_mountpoint_dest }}'
          state: directory
          owner: '{{ solr_user }}'
          group: '{{ solr_group }}'
          mode: '0755'

       - name: Mount EFS
         mount:
          name: '{{ solr_efs_mountpoint_dest }}'
          src: '{{ solr_efs_mountpoint_src }}:/'
          fstype: nfs4
          opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev
          state: mounted

       - name: Give rwx permissions for Solr on EFS mountpoint
         file:
          path: '{{ solr_efs_mountpoint_dest }}'
          owner: root
          group: root
          mode: '0777'
      when: (solr_efs_mountpoint_src is defined) and (solr_efs_mountpoint_src|length > 0)
      become: true
